{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","FilteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAAe,I,wBCEFA,EAAM,SAAAC,GACf,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,6BACtB,mCAAML,EAAMI,QAAQE,QACpB,kCAAKN,EAAMI,QAAQG,aCShBC,EAZQ,SAACR,GACpB,OAAQ,qBAAKC,UAAU,YAAf,SAGND,EAAMS,SAASC,KACf,SAAAN,GAAO,OAAG,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCGpBM,G,MAVE,SAAC,GACjB,IADkBC,EACnB,EADmBA,YAAYC,EAC/B,EAD+BA,aAE9B,OAAQ,uBAAOZ,UAAU,SAC1Ba,KAAK,SACLF,YAAaA,EACZG,SAAUF,MCwCIG,E,kDArCb,aAAc,IAAD,8BACX,gBASFH,aAAa,SAACI,GAEZ,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAVpC,EAAKC,MAAM,CAETb,SAAS,GACTU,YAAY,IALH,E,qDAcb,WACC,IAAD,OACEI,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OACjEA,EAASC,UAAQF,MAAK,SAAAG,GAAK,OAAE,EAAKT,SAAS,CAACT,SAASkB,S,oBAEvD,WAAS,IAAD,EAC0BC,KAAKN,MAA9Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACZU,EAAiBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC7CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAElD,OACE,sBAAK9B,UAAU,MAAf,UACE,oDACA,cAAC,EAAD,CAAWW,YAAY,kBAAkBC,aAAce,KAAKf,eAC5D,cAAC,EAAD,CAAUJ,SAAUoB,W,GA7BRI,aCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5b14040e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport './card.styles.css'\nexport const Card= props =>{\n    return(\n        <div className='card-container'>\n            <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set13&size=180x180`}></img>\n            <h1> {props.monster.name}</h1>\n            <p> {props.monster.email}</p>\n        </div>\n    )\n}\n\nexport default Card;","import React from 'react';\n\nimport './card-list.styles.css'\nimport {Card} from '../card/card.component';\nexport const CardList =(props)=>{\n    return (<div className='card-list'>\n\n             \n    { props.monsters.map(\n      monster=> <Card key={monster.id} monster={monster}></Card>\n    )}\n    </div>)\n}\n\n//CardList should only be used for listing\n\nexport default CardList;","import React from 'react';\nimport './search-box.styles.css'\nconst SearchBox= ({placeholder,handleChange})=>\n{\n return (<input className='search' \ntype='search' \nplaceholder={placeholder}\n onChange={handleChange}\n/>);\n}\n\n\nexport default SearchBox;","import logo from './logo.svg';\nimport React, {Component} from 'react'\nimport './App.css';\n\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box.component';\n\n\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state={\n\n      monsters:[ ],\n      searchField:''\n     \n    }\n  }\n\n  handleChange=(e)=>\n  {\n    this.setState({searchField:e.target.value})\n  }\n  componentDidMount()\n  {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response =>\n    response.json()).then(users=>this.setState({monsters:users}))\n  }\n  render(){\n   const { monsters, searchField} = this.state;\n   const FilteredMonsters=monsters.filter(monster=>\n    monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n  return (\n    <div className=\"App\">\n      <h1> Monster Directory</h1>\n      <SearchBox placeholder='Search Monsters' handleChange={this.handleChange}/>\n      <CardList monsters={FilteredMonsters}> \n       \n\n     </CardList>\n    </div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}